{"version":3,"sources":["../src/inflate-stream.js"],"names":[],"mappings":";;;;;kBAiCwB;;AAjCxB;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;;;;;;;;;;;;;;;;;;;;;AAgBA,IAAM,kBAAkB;AACtB,SAAO,MAAP;AACA,UAAQ,SAAR;CAFI;;AAKS,SAAS,aAAT,CAAuB,GAAvB,EAA4B,SAA5B,EAAuC;AACpD,MAAM,UAAU,iBAAE,KAAF,CAAQ,EAAR,EAAY,eAAZ,EAA6B,GAA7B,CAAV,CAD8C;;AAGpD,WAAS,aAAT,CAAuB,KAAvB,EAA8B,IAA9B,EAAoC;AAClC,QAAM,WAAW,4BAAkB,KAAK,IAAL,EAAW,SAA7B,CAAX,CAD4B;AAElC,QAAM,WAAW,IAAI,aAAJ,EAAX,CAF4B;AAGlC,QAAM,UAAU,0BAAV,CAH4B;;AAKlC,aAAS,KAAT,CAAe,KAAf,EAAsB;AACpB,aAAO,iBAAE,KAAF,CAAQ,0BAAa,KAAb,EAAoB,OAApB,EAA6B,MAAM,MAAN,CAArC,EAAoD;AACzD,sBAAc,eAAK,OAAL,CAAa,KAAK,IAAL,CAA3B;AACA,iDAAgB,MAAM,UAAN,EAAhB;AACA,kBAAU,KAAK,IAAL,4BAAc,MAAM,OAAN,EAAxB;OAHK,CAAP,CADoB;KAAtB;;AAQA,aAAS,SAAT,CAAmB,KAAnB,EAA0B;AACxB,aAAO,iBAAE,KAAF,CAAQ,8BAAiB,KAAjB,CAAR,EAAiC,EAAE,QAAQ,MAAM,MAAN,EAA3C,CAAP,CADwB;KAA1B;;AAIA,QAAM,mBAAmB,EAAE,0CAAF,EAAsC,YAAtC,EAA6C,oBAA7C,EAAnB,CAjB4B;AAkBlC,QAAM,YAAY,qCAAgB,gBAAhB,EAAkC,QAAQ,UAAR,sBAAlC,CAAZ,CAlB4B;;AAoBlC,YAAQ,IAAR,CAAa,SAAb,EAAwB,IAAxB,CAA6B,QAA7B,EAAuC,IAAvC,CAA4C,QAA5C,EApBkC;;AAsBlC,WAAO,wBAAS,EAAE,YAAY,IAAZ,EAAX,EAA+B,OAA/B,EAAwC,QAAxC,CAAP,CAtBkC;GAApC;;;AAHoD,WA6B3C,SAAT,CAAmB,KAAnB,EAA0B,QAA1B,EAAoC,EAApC,EAAwC;;;AACtC,QAAM,OAAO,MAAM,QAAQ,KAAR,CAAb,CADgC;AAEtC,QAAM,UAAU,MAAM,OAAN,CAFsB;AAGtC,QAAM,OAAO,IAAP,CAHgC;AAItC,QAAI,cAAJ,CAJsC;;AAMtC,QAAI,CAAC,IAAD,EAAO;AACT,WAAK,IAAL,CAAU,KAAV,EADS;AAET,aAAO,IAAP,CAFS;KAAX;;AAKA,QAAI,iBAAE,QAAF,CAAW,OAAX,EAAoB,KAAK,IAAL,CAAxB,EAAoC;AAClC,WAAK,IAAL,CAAU,KAAV,EADkC;AAElC,WAAK,IAAL,CAAU,OAAV,EAAmB;AACjB,aAAK,8BAAL;AACA,cAAM,KAAK,IAAL;OAFR,EAFkC;AAMlC,aAAO,IAAP,CANkC;KAApC;;AASA,QAAI,iBAAE,QAAF,CAAW,iBAAE,MAAF,oBAAX,EAAiC,KAAK,QAAL,CAAjC,KAAoD,KAApD,EAA2D;AAC7D,WAAK,IAAL,CAAU,KAAV,EAD6D;AAE7D,aAAO,IAAP,CAF6D;KAA/D;;AAKA,QAAI,KAAK,QAAL,KAAkB,mBAAW,MAAX,EAAmB;AACvC,WAAK,IAAL,CAAU,iBAAE,MAAF,CAAS,KAAT,sBAAmB,QAAQ,MAAR,EAAiB,KAAK,IAAL,CAApC,CAAV,EADuC;AAEvC,aAAO,IAAP,CAFuC;KAAzC;;;AAzBsC,QA+BhC,WAAW,cAAc,KAAd,EAAqB,IAArB,CAAX,CA/BgC;AAgCtC,QAAI,KAAK,QAAL,KAAkB,mBAAW,KAAX,EAAkB,QAAQ,gBAAc,IAAd,CAAmB,IAAnB,EAAyB,KAAK,IAAL,EAAW,KAApC,EAA2C,EAA3C,CAAR,CAAxC;AACA,QAAI,KAAK,QAAL,KAAkB,mBAAW,IAAX,EAAiB,QAAQ,eAAa,IAAb,CAAkB,IAAlB,EAAwB,KAAK,IAAL,EAAW,KAAnC,EAA0C,EAA1C,CAAR,CAAvC;;AAEA,aACG,EADH,CACM,UADN,EACkB,SAAS,aAAT,GAAyB;AACvC,UAAI,gBAAJ,CADuC;AAEvC,aAAO,CAAC,UAAU,KAAK,IAAL,EAAV,CAAD,KAA4B,IAA5B,EAAkC;AACvC,aAAK,IAAL,CAAU,OAAV,EADuC;OAAzC;KAFc,CADlB,CAOG,EAPH,CAOM,OAPN,EAOe,UAAC,GAAD,EAAS;AACpB,YAAK,IAAL,CAAU,OAAV,EAAmB,GAAnB,EADoB;AAEpB,WAFoB;KAAT,CAPf,CAWG,EAXH,CAWM,KAXN,EAWa;aAAM;KAAN,CAXb,CAnCsC;;AAgDtC,UAAM,IAAN,CAAW,QAAX,EAhDsC;GAAxC;;AAmDA,SAAO,kBAAS,GAAT,CAAa,SAAb,CAAP,CAhFoD;CAAvC","file":"inflate-stream.js","sourcesContent":["import path from 'path';\nimport _ from 'lodash';\nimport through2 from 'through2';\nimport duplexer from 'duplexer2';\nimport regexpTokenizer from 'regexp-stream-tokenizer';\n\nimport ResolveStream from './resolve-stream';\nimport TrimStream from './trim-stream';\n\nimport localInflater from './inflaters/local';\nimport httpInflater from './inflaters/http';\n\nimport { linkRegExp, defaultToken, defaultSeparator, WHITESPACE_GROUP, LINK_TYPES } from './config';\n\n/**\n* Input stream: object\n* - link (object, required)\n*   - href (string, required)\n*   - hrefType (enum, required)\n* - parents (array, required)\n* - references (array, required)\n*\n* Output stream: object\n* - chunk (string, required)\n*\n* Input and output properties can be altered by providing options\n*/\n\nconst DEFAULT_OPTIONS = {\n  input: 'link',\n  output: 'content',\n};\n\nexport default function InflateStream(opt, linkPaths) {\n  const options = _.merge({}, DEFAULT_OPTIONS, opt);\n\n  function inflateDuplex(chunk, link) {\n    const resolver = new ResolveStream(link.href, linkPaths);\n    const inflater = new InflateStream();\n    const trimmer = new TrimStream();\n\n    function token(match) {\n      return _.merge(defaultToken(match, options, chunk.indent), {\n        relativePath: path.dirname(link.href),\n        references: [...chunk.references],\n        parents: [link.href, ...chunk.parents],\n      });\n    }\n\n    function separator(match) {\n      return _.merge(defaultSeparator(match), { indent: chunk.indent });\n    }\n\n    const tokenizerOptions = { leaveBehind: `${WHITESPACE_GROUP}`, token, separator };\n    const tokenizer = regexpTokenizer(tokenizerOptions, options.linkRegExp || linkRegExp);\n\n    trimmer.pipe(tokenizer).pipe(resolver).pipe(inflater);\n\n    return duplexer({ objectMode: true }, trimmer, inflater);\n  }\n\n  // eslint-disable-next-line consistent-return\n  function transform(chunk, encoding, cb) {\n    const link = chunk[options.input];\n    const parents = chunk.parents;\n    const self = this;\n    let input;\n\n    if (!link) {\n      this.push(chunk);\n      return cb();\n    }\n\n    if (_.includes(parents, link.href)) {\n      this.push(chunk);\n      this.emit('error', {\n        msg: 'Circular dependency detected',\n        path: link.href,\n      });\n      return cb();\n    }\n\n    if (_.includes(_.values(LINK_TYPES), link.hrefType) === false) {\n      this.push(chunk);\n      return cb();\n    }\n\n    if (link.hrefType === LINK_TYPES.STRING) {\n      this.push(_.assign(chunk, { [options.output]: link.href }));\n      return cb();\n    }\n\n    // Inflate local or remote file streams\n    const inflater = inflateDuplex(chunk, link);\n    if (link.hrefType === LINK_TYPES.LOCAL) input = localInflater.call(this, link.href, chunk, cb);\n    if (link.hrefType === LINK_TYPES.HTTP) input = httpInflater.call(this, link.href, chunk, cb);\n\n    inflater\n      .on('readable', function inputReadable() {\n        let content;\n        while ((content = this.read()) !== null) {\n          self.push(content);\n        }\n      })\n      .on('error', (err) => {\n        this.emit('error', err);\n        cb();\n      })\n      .on('end', () => cb());\n\n    input.pipe(inflater);\n  }\n\n  return through2.obj(transform);\n}\n"]}